generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  STUDENT
  INSTRUCTOR
}

model User {
  id       String   @id @default(uuid())
  name     String
  email    String   @unique
  password String
  role     UserRole @default(STUDENT)

  questions     Questions[]
  answers       Answers[]
  comments      Comments[]
  notifications Notification[]

  @@map("users")
}

model Questions {
  id           String    @id @default(uuid())
  title        String
  slug         String    @unique
  content      String
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime? @updatedAt @map("updated_at")
  authorId     String    @map("author_id")
  bestAnswerId String?   @unique @map("best_answer_id")

  author      User          @relation(fields: [authorId], references: [id])
  bestAnswer  Answers?      @relation("bestAnswer", fields: [bestAnswerId], references: [id])
  answers     Answers[]
  comments    Comments[]
  attachments Attachments[]

  @@map("questions")
}

model Answers {
  id          String    @id @default(uuid())
  content     String
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime? @updatedAt @map("updated_at")
  authorId    String    @map("author_id")
  questionsId String    @map("questions_id")

  author       User          @relation(fields: [authorId], references: [id])
  bestAnswerOn Questions?    @relation("bestAnswer")
  questions    Questions     @relation(fields: [questionsId], references: [id])
  comments     Comments[]
  attachments  Attachments[]

  @@map("answers")
}

model Comments {
  id          String    @id @default(uuid())
  content     String
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime? @updatedAt @map("updated_at")
  authorId    String    @map("author_id")
  questionsId String?   @map("questions_id")
  answersId   String?   @map("answers_id")

  author   User       @relation(fields: [authorId], references: [id])
  question Questions? @relation(fields: [questionsId], references: [id])
  answer   Answers?   @relation(fields: [answersId], references: [id])

  @@map("comments")
}

model Attachments {
  id          String  @id @default(uuid())
  title       String
  url         String
  questionsId String? @map("questions_id")
  answersId   String? @map("answers_id")

  question Questions? @relation(fields: [questionsId], references: [id])
  answer   Answers?   @relation(fields: [answersId], references: [id])

  @@map("attachments")
}

model Notification {
  id          String    @id @default(uuid())
  recipientId String    @map("recipient_id")
  title       String
  content     String
  readAt      DateTime? @map("read_at")
  createdAt   DateTime  @default(now()) @map("created_at")

  recipient User @relation(fields: [recipientId], references: [id])

  @@map("notifications")
}
